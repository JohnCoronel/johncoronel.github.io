<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on John Coronel</title>
    <link>https://johncoronel.github.io/blog/</link>
    <description>Recent content in Blog on John Coronel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 04 Nov 2018 20:00:36 -0800</lastBuildDate>
    
	<atom:link href="https://johncoronel.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Improving CSS Animation Performance</title>
      <link>https://johncoronel.github.io/blog/improving-css-animation-performance/</link>
      <pubDate>Sun, 04 Nov 2018 20:00:36 -0800</pubDate>
      
      <guid>https://johncoronel.github.io/blog/improving-css-animation-performance/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Refactoring React with Styled-Components</title>
      <link>https://johncoronel.github.io/blog/refactoring-react-with-styled-components/</link>
      <pubDate>Sun, 04 Nov 2018 17:00:16 -0800</pubDate>
      
      <guid>https://johncoronel.github.io/blog/refactoring-react-with-styled-components/</guid>
      <description>Refactoring with styled-components I&amp;rsquo;ve recently been working on refactoring a React web app I wrote a while back ago where the styling is an unpleasent mix of inline-styles,scss,and classNames scattered throughout different components. After researching different css-in-js libraries I decided to go with styled-components. One immediate improvement I noticed was how semantically nicer my components were to read.
Previous - classNames and css const content = ClassNames({ &#39;movie-card__content__body&#39;:true, &#39;movie-card__content__body--active&#39;:this.state.expanded }) const body = ClassNames({ &amp;quot;movie-card__content--active&amp;quot;: this.</description>
    </item>
    
  </channel>
</rss>